<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:OneVK.Controls" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity" xmlns:Core="using:Microsoft.Xaml.Interactions.Core">

    <Style TargetType="local:Carousel">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:Carousel">
                    <Canvas x:Name="RootCanvas" ManipulationMode="All"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="local:FullscreenControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:FullscreenControl">
                    <Border x:Name="Root" Background="{ThemeResource ProgressControlBackground}" Visibility="Collapsed">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="IsOn">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Root">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.017">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Root">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.017" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="IsOff">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.5" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Root" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Root">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.517">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Interactivity:Interaction.Behaviors>
                            <Core:DataTriggerBehavior Binding="{Binding IsVisible, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="False">
                                <Core:GoToStateAction StateName="IsOff"/>
                            </Core:DataTriggerBehavior>
                            <Core:DataTriggerBehavior Binding="{Binding IsVisible, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                                <Core:GoToStateAction StateName="IsOn"/>
                            </Core:DataTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:OneCommandBar">
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{ThemeResource CommandBarBackgroundThemeBrush}"/>
        <Setter Property="Foreground" Value="{ThemeResource CommandBarForegroundThemeBrush}"/>
        <Setter Property="Height" Value="56"/>
        <Setter Property="Transitions">
            <Setter.Value>
                <TransitionCollection>
                    <PaneThemeTransition Edge="Bottom"/>
                </TransitionCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:OneCommandBar">
                    <Canvas Height="56" Width="{TemplateBinding Width}" x:Name="RootCanvas">
                        <Canvas.Resources>
                            <Storyboard x:Name="OpenMenuStoryboard">
                                <DoubleAnimation Duration="0:0:0.3" To="-200" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="MenuPanel" d:IsOptimized="True">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </Canvas.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3" To="60" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="MenuPanel" d:IsOptimized="True">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" Exponent="6"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="NormalPanel" d:IsOptimized="True">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" Exponent="6"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MenuOpened">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DimmingRect">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="NormalPanel">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-25">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonVisibilityStates">
                                <VisualState x:Name="VisibleButton">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MenuButtonBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="HidedButton">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MenuButtonBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonStates">
                                <VisualState x:Name="NormalButton">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.3" To="#00000000" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="MenuButtonBorder" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PressedButton">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background)" Storyboard.TargetName="MenuButtonBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListItemPressedBackgroundColor}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="DimmingRect" Fill="Transparent" Width="500" Height="800" Canvas.Top="-800" Visibility="Collapsed" IsHoldingEnabled="False" IsRightTapEnabled="False"/>
                        <Grid x:Name="MenuPanel" Background="{TemplateBinding Background}" RenderTransformOrigin="0.5,0" Width="{TemplateBinding Width}" MaxHeight="200">
                            <Grid.RenderTransform>
                                <CompositeTransform TranslateY="56"/>
                            </Grid.RenderTransform>
                            <Rectangle Fill="Black" Opacity="0.2"/>
                            <ScrollViewer HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Margin="18,10,18,0">
                                <ItemsControl ItemsSource="{TemplateBinding SecondaryCommands}"
                                          Foreground="{TemplateBinding Foreground}" VerticalAlignment="Stretch"/>
                            </ScrollViewer>
                        </Grid>
                        <Grid x:Name="NormalPanel" Background="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="80" RenderTransformOrigin="0.5,1">
                            <Grid.RenderTransform>
                                <CompositeTransform/>
                            </Grid.RenderTransform>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ItemsControl ItemsSource="{TemplateBinding PrimaryCommands}"
                    			Foreground="{TemplateBinding Foreground}"
                    			x:Name="ButtonsControl">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <ItemsStackPanel Orientation="Horizontal" HorizontalAlignment="Right"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemContainerTransitions>
                                    <TransitionCollection>
                                        <PopupThemeTransition/>
                                        <ReorderThemeTransition/>
                                        <RepositionThemeTransition/>
                                    </TransitionCollection>
                                </ItemsControl.ItemContainerTransitions>
                            </ItemsControl>
                            <Border x:Name="MenuButtonBorder" Width="50" Grid.Column="1" Background="#00000000" RenderTransformOrigin="0.5,0.5" Margin="0,0,0,24">
                                <Border.RenderTransform>
                                    <CompositeTransform/>
                                </Border.RenderTransform>
                                <TextBlock HorizontalAlignment="Center" Text="&#xE10C;" VerticalAlignment="Center" 
                                           FontFamily="ms-appx:/Assets/segmdl2.ttf#Segoe MDL2 Assets" Margin="2,0,0,0"
                                           Foreground="{TemplateBinding Foreground}" FontSize="26.667" TextLineBounds="TrimToCapHeight"/>
                            </Border>
                        </Grid>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:ContentOneCommandBar">
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{ThemeResource CommandBarBackgroundThemeBrush}"/>
        <Setter Property="Foreground" Value="{ThemeResource CommandBarForegroundThemeBrush}"/>
        <Setter Property="Height" Value="56"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ContentOneCommandBar">
                    <Canvas Height="56" Width="{TemplateBinding Width}" x:Name="RootCanvas">
                        <Canvas.Resources>
                            <Storyboard x:Name="OpenMenuStoryboard">
                                <DoubleAnimation Duration="0:0:0.3" To="-200" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="MenuPanel" d:IsOptimized="True">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.3" To="-80" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="PrimaryButtonsPanel" d:IsOptimized="True">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </Canvas.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3" To="60" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="MenuPanel" d:IsOptimized="True">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" Exponent="6"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.3" To="60" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="PrimaryButtonsPanel" d:IsOptimized="True">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" Exponent="6"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MenuOpened">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DimmingRect">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonVisibilityStates">
                                <VisualState x:Name="VisibleButton">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MenuButtonBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="HidedButton">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MenuButtonBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonStates">
                                <VisualState x:Name="NormalButton">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.3" To="#00000000" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="MenuButtonBorder" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PressedButton">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background)" Storyboard.TargetName="MenuButtonBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListItemPressedBackgroundColor}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="DimmingRect" Fill="Transparent" Width="500" Height="800" Canvas.Top="-800" Visibility="Collapsed" IsHoldingEnabled="False" IsRightTapEnabled="False"/>
                        <Grid x:Name="MenuPanel" Background="{TemplateBinding Background}" RenderTransformOrigin="0.5,0" Width="{TemplateBinding Width}" MaxHeight="200">
                            <Grid.RenderTransform>
                                <CompositeTransform TranslateY="56"/>
                            </Grid.RenderTransform>
                            <Rectangle Fill="Black" Opacity="0.2"/>
                            <ScrollViewer HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Margin="18,0,18,0">
                                <ItemsControl ItemsSource="{TemplateBinding SecondaryCommands}"
                                          Foreground="{TemplateBinding Foreground}" VerticalAlignment="Stretch"/>
                            </ScrollViewer>
                        </Grid>
                        <Grid x:Name="PrimaryButtonsPanel" Background="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="80" RenderTransformOrigin="0.5,1">
                            <Grid.RenderTransform>
                                <CompositeTransform TranslateY="56"/>
                            </Grid.RenderTransform>
                            <Rectangle Fill="Black" Opacity="0.1"/>
                            <ItemsControl ItemsSource="{TemplateBinding PrimaryCommands}"
                        		Foreground="{TemplateBinding Foreground}"
                        		x:Name="ButtonsControl" Margin="0,0,18,0">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <ItemsStackPanel Orientation="Horizontal" HorizontalAlignment="Right"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemContainerTransitions>
                                    <TransitionCollection>
                                        <PopupThemeTransition/>
                                        <ReorderThemeTransition/>
                                        <RepositionThemeTransition/>
                                    </TransitionCollection>
                                </ItemsControl.ItemContainerTransitions>
                            </ItemsControl>
                        </Grid>
                        <Grid x:Name="NormalPanel" Background="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="56" RenderTransformOrigin="0.5,1">
                            <Grid.RenderTransform>
                                <CompositeTransform/>
                            </Grid.RenderTransform>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Content="{TemplateBinding Content}" Margin="18,0"/>
                            <Border x:Name="MenuButtonBorder" Width="50" Grid.Column="1" Background="#00000000" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <CompositeTransform/>
                                </Border.RenderTransform>
                                <TextBlock HorizontalAlignment="Center" Text="&#xE10C;" VerticalAlignment="Center" 
                                           FontFamily="ms-appx:/Assets/segmdl2.ttf#Segoe MDL2 Assets" Margin="2,0,0,0"
                                           Foreground="{TemplateBinding Foreground}" FontSize="26.667" TextLineBounds="TrimToCapHeight"/>
                            </Border>
                        </Grid>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:OneTopBarButton">
        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Transitions">
            <Setter.Value>
                <TransitionCollection>
                    <PaneThemeTransition Edge="Bottom"/>
                </TransitionCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:OneTopBarButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" Width="35"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:OneCommandBarButton">
        <Setter Property="Margin" Value="3,0"/>
        <Setter Property="Foreground" Value="{ThemeResource CommandBarForegroundThemeBrush}"/>
        <Setter Property="MaxWidth" Value="56"/>
        <Setter Property="MaxHeight" Value="80"/>
        <Setter Property="Width" Value="56"/>
        <Setter Property="Height" Value="80"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:OneCommandBarButton">
                    <Grid x:Name="grid" Background="#00000000">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="25"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0:0:0.3" To="#00000000" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid" d:IsOptimized="True" To="#33828282"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0:0:0.3" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}"/>
                        <TextBlock x:Name="textBlock" TextWrapping="Wrap" Text="{TemplateBinding Label}" Foreground="{TemplateBinding Foreground}" Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OneCommandBarMenuButtonStyle" TargetType="local:OneCommandBarButton">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Foreground" Value="{ThemeResource CommandBarForegroundThemeBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:OneCommandBarButton">
                    <Grid x:Name="grid" Height="45" Background="#00000000">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.3" To="#00000000" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid" d:IsOptimized="True" To="#33828282"/>
                                        <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.3" To="#00000000" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0:0:0.3" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <TextBlock x:Name="textBlock" Text="{TemplateBinding Label}" FontSize="18" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:ThumbnailControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ThumbnailControl">
                    <Border x:Name="LayoutRoot" Background="{ThemeResource ImageBackgroundBrush}"
                            Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="TapStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerDown"/>
                                <VisualState x:Name="PointerUp"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Image Source="{Binding Thumbnail.ThumbnailSource, RelativeSource={RelativeSource TemplatedParent}}" Stretch="UniformToFill"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style TargetType="ListViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="border" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.3" To="Transparent" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background)" Storyboard.TargetName="border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemPressedBackgroundColor}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOverPressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style TargetType="local:MenuListItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:MenuListItem">
                    <Border x:Name="border" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.3" To="Transparent" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background)" Storyboard.TargetName="border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuItemPressedBackgroundColor}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOverPressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Margin="18,17,10,13">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{TemplateBinding Tag}" Style="{StaticResource SocialButtonGlyphStyle}" FontFamily="ms-appx:/Assets/segmdl2.ttf#Segoe MDL2 Assets" Foreground="{ThemeResource MenuPanelForegroundBrush}" HorizontalAlignment="Center"/>
                            <TextBlock Grid.Column="1" Text="{TemplateBinding Content}" Style="{StaticResource MenuItemStyle}" Foreground="{ThemeResource MenuPanelForegroundBrush}" Margin="17,5,0,0"/>
                            <Border Background="{StaticResource NotificationsBadgeBackground}"
                                    Visibility="{Binding Counter, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource CounterVisibilityConverter}}"
                                    Grid.Column="2" VerticalAlignment="Center"
                                    x:Name="CounterElement" CornerRadius="20" MinWidth="25" Height="25">
                                <TextBlock Text="{Binding Counter, RelativeSource={RelativeSource TemplatedParent}}" TextLineBounds="Tight" Margin="2,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{ThemeResource MenuPanelForegroundBrush}" FontSize="18.667"/>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ListFooterTemplate">
        <Rectangle Height="80"/>
    </DataTemplate>

    <DataTemplate x:Key="LoadingListFooterTemplate">
        <StackPanel VerticalAlignment="Top" Style="{StaticResource TransitionStackPanelStyle}" Margin="0,200,0,200">
            <ProgressRing Style="{StaticResource WaveProgressRingStyle}" Width="120" Height="50" IsActive="True"/>
            <TextBlock Text="Загрузка" Style="{StaticResource ProgressTextStyle}"/>
        </StackPanel>
    </DataTemplate>

    <ControlTemplate x:Key="CounterListViewItemTemplate" TargetType="ListViewItem">
        <Grid x:Name="root" Background="Black" Margin="0,10">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                            <ColorAnimation Duration="0:0:0.3" To="Transparent" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="root" d:IsOptimized="True"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="PointerOver"/>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="root">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListItemPressedBackgroundColor}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="PointerOverPressed"/>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="border">
                <StackPanel VerticalAlignment="Top">
                    <ContentPresenter HorizontalAlignment="Center" FontWeight="SemiLight" FontSize="26" TextLineBounds="TrimToCapHeight" Foreground="{ThemeResource HighContrastForegroundBrush}" Height="25"/>
                    <TextBlock Text="{TemplateBinding Tag}" FontWeight="Normal" HorizontalAlignment="Center" Style="{StaticResource ListItem2Style}" Foreground="{ThemeResource TextForegroundBrush}"/>
                </StackPanel>
            </Border>
        </Grid>
    </ControlTemplate>

    <!--Стиль кнопки лайка-->
    <Style TargetType="local:LikeButton">
        <Setter Property="IsTextScaleFactorEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:LikeButton">
                    <Border HorizontalAlignment="Left" 
						VerticalAlignment="Top"
						Background="Transparent" 
						Visibility="{Binding Visibility, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground)" Storyboard.TargetName="Glyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground)" Storyboard.TargetName="Counter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Inactive"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid Margin="0,15">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="Glyph" Text="&#xE006;" Style="{StaticResource SocialButtonGlyphStyle}" FontFamily="ms-appx:/Assets/segmdl2.ttf#Segoe MDL2 Assets"/>
                            <TextBlock x:Name="Counter" 
								Grid.Column="1" 
								Text="{Binding Like.Count, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
								Style="{StaticResource SocialButtonCounterStyle}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Стиль кнопки репоста-->
    <Style TargetType="local:RepostButton">
        <Setter Property="IsTextScaleFactorEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:RepostButton">
                    <Border HorizontalAlignment="Left" VerticalAlignment="Top"
						Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground)" Storyboard.TargetName="Glyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground)" Storyboard.TargetName="Counter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Inactive"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid Margin="0,15">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="Glyph" Text="&#xE789;" Style="{StaticResource SocialButtonGlyphStyle}" FontFamily="ms-appx:/Assets/segmdl2.ttf#Segoe MDL2 Assets"/>
                            <TextBlock x:Name="Counter" 
								Grid.Column="1" 
								Text="{Binding Repost.Count, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
								Style="{StaticResource SocialButtonCounterStyle}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Стиль кнопки комментариев-->
    <Style TargetType="local:CommentsButton">
        <Setter Property="IsTextScaleFactorEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:CommentsButton">
                    <Border HorizontalAlignment="Left" 
						VerticalAlignment="Top"
						Background="Transparent"                                          
						Visibility="{Binding Visibility, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Active"/>
                                <VisualState x:Name="Inactive"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid Margin="0,15">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="Glyph" Text="&#xE15F;" Style="{StaticResource SocialButtonGlyphStyle}" FontFamily="ms-appx:/Assets/segmdl2.ttf#Segoe MDL2 Assets"/>
                            <TextBlock x:Name="Counter" 
								Grid.Column="1" 
								Text="{Binding Comments.Count, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
								Style="{StaticResource SocialButtonCounterStyle}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Стиль поста-->
    <Style TargetType="local:PostItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:PostItem">
                    <Border Background="{TemplateBinding Background}" Margin="0,3,0,0" Padding="0,15,0,0"
                            DataContext="{Binding Post, RelativeSource={RelativeSource TemplatedParent}}"
                            CacheMode="BitmapCache">
                        <StackPanel Margin="20,0">
                            <Grid Margin="0,0,0,10" Pivot.SlideInAnimationGroup="GroupOne">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Border Background="{ThemeResource ChromeBrush}"
									Height="45" Width="45" CornerRadius="25">
                                    <Ellipse StrokeThickness="0">
                                        <Ellipse.Fill>
                                            <ImageBrush Stretch="UniformToFill" 
												ImageSource="{Binding Owner.PhotoURL}"/>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Border>
                                <StackPanel Grid.Column="1" Margin="10,0,0,0"
									        VerticalAlignment="Center"
									        Pivot.SlideInAnimationGroup="Default"
                                            Background="Transparent"
                                            x:Name="OwnerPanel">
                                    <TextBlock Text="{Binding}" DataContext="{Binding Owner.Title}" 
											   d:DataContext="Роман Гладких"
										       Style="{StaticResource PostHeaderStyle}" Foreground="{ThemeResource PostTitleForegroundBrush}"/>
                                    <TextBlock Text="{Binding Date, Converter={StaticResource RelativeTimeConverter}}"
										Style="{StaticResource ListItem2Style}" Foreground="{ThemeResource PostTitleForegroundBrush}"/>
                                </StackPanel>

                            </Grid>
                            <RichTextBlock Style="{StaticResource BaseRichTextStyle}" VerticalAlignment="Stretch" Pivot.SlideInAnimationGroup="GroupOne"
                                           Visibility="{Binding HasText, Converter={StaticResource BooleanToVisibilityConverter}}"
                                           local:RichTextBlockExtensions.Text="{Binding PreviewText}" IsTextSelectionEnabled="False"/>

                            <StackPanel Visibility="{Binding HasCopyPost, Converter={StaticResource BooleanToVisibilityConverter}}"
								        Pivot.SlideInAnimationGroup="GroupOne">
                                <TextBlock Style="{StaticResource BaseTextStyle}" Foreground="{ThemeResource PostTitleForegroundBrush}" Margin="0,0,0,10">
									<Run Text="&#xE201;" FontFamily="ms-appx:/Assets/segmdl2.ttf#Segoe MDL2 Assets"/>
									<Run Text="{Binding FirstCopyPost.Owner.Title}"/>
                                </TextBlock>
                                <RichTextBlock Style="{StaticResource BaseRichTextStyle}" VerticalAlignment="Stretch" Pivot.SlideInAnimationGroup="GroupOne"
                                           Visibility="{Binding FirstCopyPost.HasText, Converter={StaticResource BooleanToVisibilityConverter}}"
                                           local:RichTextBlockExtensions.Text="{Binding FirstCopyPost.PreviewText}" Margin="0,0,0,10"
                                               IsTextSelectionEnabled="False"/>
                                <local:AttachmentsPresenter Attachments="{Binding FirstCopyPost.Attachments}"
									Visibility="{Binding FirstCopyPost.HasAttachments, Converter={StaticResource BooleanToVisibilityConverter}}"
									Pivot.SlideInAnimationGroup="GroupTwo"/>
                            </StackPanel>

                            <TextBlock x:Name="ReadFull" Text="Читать полностью" Foreground="{ThemeResource AccentBrush}"
								       Style="{StaticResource BaseTextStyle}"
                                       Visibility="{Binding IsLongText, Converter={StaticResource BooleanToVisibilityConverter}}"
								       Pivot.SlideInAnimationGroup="GroupOne"/>

                            <local:AttachmentsPresenter Attachments="{Binding Attachments}"
								Visibility="{Binding HasAttachments, Converter={StaticResource BooleanToVisibilityConverter}}"
								Pivot.SlideInAnimationGroup="GroupTwo" Margin="0,10,0,0"/>

                            <Grid Pivot.SlideInAnimationGroup="GroupThree">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <local:CommentsButton HorizontalAlignment="Left"
									Comments="{Binding Comments, Mode=TwoWay}"/>
                                <local:RepostButton Grid.Column="1" HorizontalAlignment="Right"
									Repost="{Binding Reposts, Mode=TwoWay}"/>
                                <local:LikeButton Grid.Column="2" Like="{Binding Likes, Mode=TwoWay}" Margin="20,0,0,0" 
									LikeTarget="{Binding}" 
									HorizontalAlignment="Right"/>
                            </Grid>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IconButtonStyle" TargetType="AppBarButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="AppBarButton">
                    <Grid HorizontalAlignment="Center" Height="40" Width="40">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ApplicationViewStates">
                                <VisualState x:Name="FullSize"/>
                                <VisualState x:Name="Compact"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="Ellipse">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Ellipse">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="Ellipse">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Ellipse x:Name="Ellipse" Fill="{ThemeResource AudioButtonBackgroundBrush}" Height="40" Stroke="{ThemeResource AudioButtonBackgroundBrush}" StrokeThickness="2" Width="40"/>
                        <ContentPresenter x:Name="Content" Content="{TemplateBinding Icon}" Foreground="White" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:ChatBubble">
        <Setter Property="Padding" Value="6,2"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ChatBubble">
                    <Grid x:Name="ContentRoot" Background="Transparent" Pivot.SlideInAnimationGroup="GroupOne">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ChatBubbleDirectionStates">
                                <VisualState x:Name="Left">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LeftPath" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="RightPath" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Right">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="RightPath" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LeftPath" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NoDirection">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LeftPath" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="RightPath" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border 
							x:Name="ContentBorder" 
							BorderBrush="{TemplateBinding Background}"
							Background="{TemplateBinding Background}" Grid.Column="1" Padding="6">
                            <ContentControl 
                        		HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"								
                        		Content="{TemplateBinding Content}"
                        		FontSize="{TemplateBinding FontSize}" 
                        		FontFamily="{TemplateBinding FontFamily}"
                        		ContentTemplate="{TemplateBinding ContentTemplate}"
                        		ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                        </Border>
                        <Path 
							x:Name="LeftPath"
							Data="M0,1 L1,1 L1,0 "
							Fill="{TemplateBinding Background}"
							Stretch="Fill"
							Height="12"
							Width="15"
							HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,-1,0" />
                        <Path 
                        	x:Name="RightPath"
                        	Data="M0,0 L0,1 L1,1 "
                        	Fill="{TemplateBinding Background}"
                        	Stretch="Fill"
                        	Height="12"
                        	Width="15"
                        	HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Column="2" Margin="-1,0,0,0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:ChatBubbleTextBox">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Background" Value="{ThemeResource TextBoxBackgroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource TextBoxBackgroundThemeBrush}"/>
        <Setter Property="Foreground" Value="{ThemeResource TextBoxForegroundThemeBrush}"/>
        <Setter Property="BorderThickness" Value="5"/>
        <Setter Property="Padding" Value="7,4,0,4"/>

        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ChatBubbleTextBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ChatBubbleDirectionStates">
                                <VisualState x:Name="UpperRight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UpperRightPath">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="UpperLeft">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UpperLeftPath">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LowerRight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LowerRightPath">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LowerLeft">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LowerLeftPath">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="{StaticResource TextControlBackgroundThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="{StaticResource TextControlPointerOverBackgroundThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonStates">
                                <VisualState x:Name="ButtonVisible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DeleteButton">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ButtonCollapsed"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Border x:Name="BackgroundElement" 
							Background="{TemplateBinding Background}"/>

                        <TextBlock 	Opacity="0"
							Text="{TemplateBinding Text}" 
							Margin="{TemplateBinding BorderThickness}" 
							Padding="{TemplateBinding Padding}"/>

                        <ScrollViewer x:Name="HintContentElement"
							Content="{TemplateBinding PlaceholderText}" 
							HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" 
							HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" 
							IsTabStop="False" 
							IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" 
							IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" 
							IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" 
							Margin="{TemplateBinding BorderThickness}" 
							Padding="{TemplateBinding Padding}" 
							VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
							VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" 
							ZoomMode="Disabled" >
                            <ScrollViewer.Foreground>
                                <SolidColorBrush Color="#66000000"/>
                            </ScrollViewer.Foreground>
                        </ScrollViewer>
                        <ScrollViewer x:Name="ContentElement" 
							HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" 
							HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" 
							IsTabStop="False" 
							IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" 
							IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" 
							IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" 
							Margin="{TemplateBinding BorderThickness}" 
							Padding="{TemplateBinding Padding}" 
							VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
							VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" 
							ZoomMode="Disabled" />
                        <Path 
							x:Name="LowerRightPath"
							Data="M0,0 L1,1 L1,0 "
							Grid.Row="2"
							Fill="{Binding Background, ElementName=BackgroundElement}"
							Opacity="{Binding Opacity, ElementName=BackgroundElement}"
							Stretch="Fill"
							Margin="12,0"
							Height="12"
							Width="18"
							Visibility="Collapsed"
							HorizontalAlignment="Right"
							VerticalAlignment="Top" />
                        <Path 
							x:Name="LowerLeftPath"
							Data="M0,0 L0,1 L1,0"
							Grid.Row="2"
							Fill="{Binding Background, ElementName=BackgroundElement}"
							Opacity="{Binding Opacity, ElementName=BackgroundElement}"
							Stretch="Fill"
							Margin="12,0"
							Height="12"
							Width="18"
							Visibility="Collapsed"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"/>
                        <Path 
							x:Name="UpperLeftPath"
							Data="M0,0 L1,1 L0,1 "
							Grid.Row="0"
							Fill="{Binding Background, ElementName=BackgroundElement}"
							Opacity="{Binding Opacity, ElementName=BackgroundElement}"
							Stretch="Fill"
							Margin="12,0"
							Height="12"
							Width="18"
							Visibility="Collapsed"
							HorizontalAlignment="Left"
							VerticalAlignment="Bottom" />
                        <Path 
							x:Name="UpperRightPath"
							Data="M0,1 L1,1 L1,0 "
							Grid.Row="0"
							Fill="{Binding Background, ElementName=BackgroundElement}"
							Opacity="{Binding Opacity, ElementName=BackgroundElement}"
							Stretch="Fill"
							Margin="12,0"
							Height="12"
							Width="18"
							Visibility="Collapsed"
							HorizontalAlignment="Right"
							VerticalAlignment="Bottom" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:StateBlock">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:StateBlock">
                    <Grid x:Name="ContentRoot" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Visibility="Collapsed">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="NormalState">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ErrorState">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ErrorPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ErrorPanel" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LoadingPanel" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LoadingPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.117">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NoDataTextblock" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NoDataTextblock">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.117">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentRoot" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LoadingState">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LoadingPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LoadingPanel" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ErrorPanel" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ErrorPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.117">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NoDataTextblock" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NoDataTextblock">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.117">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentRoot" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NoDataState">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ErrorPanel" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ErrorPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.117">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NoDataTextblock" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NoDataTextblock">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LoadingPanel" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LoadingPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.117">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentRoot" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <StackPanel x:Name="ErrorPanel" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" Opacity="0" HorizontalAlignment="Center">
                            <StackPanel.RenderTransform>
                                <CompositeTransform/>
                            </StackPanel.RenderTransform>
                            <TextBlock x:Name="ErrorTextBlock" TextWrapping="Wrap" Text="Не удалось загрузить данные" Style="{StaticResource StateBlockStyle}" HorizontalAlignment="Left" RenderTransformOrigin="0.5,0.5">
                                <TextBlock.RenderTransform>
                                    <CompositeTransform/>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                            <Button x:Name="ReloadButton" Content="Повторить" HorizontalAlignment="Center" VerticalAlignment="Top" BorderThickness="0" Margin="0,20,0,0" RenderTransformOrigin="0.5,0.5" Style="{StaticResource ButtonStyle}">
                                <Button.RenderTransform>
                                    <CompositeTransform/>
                                </Button.RenderTransform>
                            </Button>
                        </StackPanel>
                        <StackPanel x:Name="LoadingPanel" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" Opacity="0" Visibility="Collapsed" Style="{StaticResource TransitionStackPanelStyle}" HorizontalAlignment="Center">
                            <StackPanel.RenderTransform>
                                <CompositeTransform/>
                            </StackPanel.RenderTransform>

                            <ProgressRing Style="{StaticResource WaveProgressRingStyle}" Width="120" Height="50" IsActive="True" x:Name="LoadingBar">
                                <ProgressRing.RenderTransform>
                                    <CompositeTransform/>
                                </ProgressRing.RenderTransform>
                            </ProgressRing>
                            <TextBlock Text="Загрузка" Style="{StaticResource ProgressTextStyle}" x:Name="LoadingTextBlock">
                                <TextBlock.RenderTransform>
                                    <CompositeTransform/>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </StackPanel>
                        <TextBlock x:Name="NoDataTextblock" TextWrapping="Wrap" Text="Здесь ничего нет" Style="{StaticResource StateBlockStyle}" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Top" HorizontalAlignment="Center" Visibility="Collapsed" Opacity="0">
                            <TextBlock.RenderTransform>
                                <CompositeTransform/>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="local:StateBlockOld">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:StateBlockOld">
                    <Grid x:Name="ContentRoot" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Visibility="Collapsed">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="NormalState">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ErrorState">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ErrorPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ErrorPanel" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LoadingPanel" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LoadingPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.117">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NoDataTextblock" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NoDataTextblock">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.117">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentRoot" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LoadingState">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LoadingPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LoadingPanel" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ErrorPanel" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ErrorPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.117">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NoDataTextblock" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NoDataTextblock">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.117">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentRoot" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NoDataState">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ErrorPanel" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ErrorPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.117">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NoDataTextblock" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NoDataTextblock">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LoadingPanel" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LoadingPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.117">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentRoot" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <StackPanel x:Name="ErrorPanel" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" Opacity="0" HorizontalAlignment="Center">
                            <StackPanel.RenderTransform>
                                <CompositeTransform/>
                            </StackPanel.RenderTransform>
                            <TextBlock x:Name="ErrorTextBlock" TextWrapping="Wrap" Text="Не удалось загрузить данные" Style="{StaticResource StateBlockStyle}" HorizontalAlignment="Left" RenderTransformOrigin="0.5,0.5">
                                <TextBlock.RenderTransform>
                                    <CompositeTransform/>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                            <Button x:Name="ReloadButton" Content="Повторить" HorizontalAlignment="Center" VerticalAlignment="Top" BorderThickness="0" Margin="0,20,0,0" RenderTransformOrigin="0.5,0.5" Style="{StaticResource ButtonStyle}">
                                <Button.RenderTransform>
                                    <CompositeTransform/>
                                </Button.RenderTransform>
                            </Button>
                        </StackPanel>
                        <StackPanel x:Name="LoadingPanel" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" Opacity="0" Visibility="Collapsed" Style="{StaticResource TransitionStackPanelStyle}" HorizontalAlignment="Center">
                            <StackPanel.RenderTransform>
                                <CompositeTransform/>
                            </StackPanel.RenderTransform>

                            <ProgressRing Style="{StaticResource WaveProgressRingStyle}" Width="120" Height="50" IsActive="True" x:Name="LoadingBar">
                                <ProgressRing.RenderTransform>
                                    <CompositeTransform/>
                                </ProgressRing.RenderTransform>
                            </ProgressRing>
                            <TextBlock Text="Загрузка" Style="{StaticResource ProgressTextStyle}" x:Name="LoadingTextBlock">
                                <TextBlock.RenderTransform>
                                    <CompositeTransform/>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </StackPanel>
                        <TextBlock x:Name="NoDataTextblock" TextWrapping="Wrap" Text="Здесь ничего нет" Style="{StaticResource StateBlockStyle}" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Top" HorizontalAlignment="Center" Visibility="Collapsed" Opacity="0">
                            <TextBlock.RenderTransform>
                                <CompositeTransform/>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Стиль контейнера контента, поддерживающего уведомления о состоянии-->
    <Style TargetType="local:ContentContainer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ContentContainer">
                    <Grid x:Name="ContentRoot" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="NormalState">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ErrorPanel" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ErrorPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.117">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Prsenter" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Prsenter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ErrorState">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="ErrorPanel">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="70"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="4"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="ReloadButton">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="30"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="30"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="4"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ErrorTextBlock">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ReloadButton">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ErrorPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ErrorPanel" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LoadingPanel" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LoadingPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.117">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NoDataTextblock" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NoDataTextblock">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.117">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Prsenter" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Prsenter">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.117">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LoadingState">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LoadingPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LoadingPanel" d:IsOptimized="True"/>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="LoadingPanel">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="70"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="4"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LoadingTextBlock">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LoadingBar">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="LoadingBar">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="30"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="30"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="4"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ErrorPanel" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ErrorPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.117">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NoDataTextblock" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NoDataTextblock">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.117">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Prsenter" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Prsenter">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.117">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NoDataState">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ErrorPanel" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ErrorPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.117">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="NoDataTextblock">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="70"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="4"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NoDataTextblock">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NoDataTextblock">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LoadingPanel" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LoadingPanel">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.117">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Prsenter" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Prsenter">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.117">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <StackPanel x:Name="ErrorPanel" VerticalAlignment="Top" Margin="0,0,20,0" RenderTransformOrigin="0.5,0.5" Opacity="0">
                            <StackPanel.RenderTransform>
                                <CompositeTransform/>
                            </StackPanel.RenderTransform>
                            <TextBlock x:Name="ErrorTextBlock" TextWrapping="Wrap" Text="Не удалось загрузить данные" Style="{StaticResource StateBlockStyle}" HorizontalAlignment="Left" RenderTransformOrigin="0.5,0.5">
                                <TextBlock.RenderTransform>
                                    <CompositeTransform/>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                            <Button x:Name="ReloadButton" Content="Повторить" HorizontalAlignment="Left" VerticalAlignment="Top" BorderThickness="0" MinHeight="0" MinWidth="0" Margin="0,15,0,0" RenderTransformOrigin="0.5,0.5">
                                <Button.RenderTransform>
                                    <CompositeTransform/>
                                </Button.RenderTransform>
                            </Button>
                        </StackPanel>
                        <StackPanel x:Name="LoadingPanel" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" Margin="0,10,0,0" Opacity="0" Visibility="Collapsed" Style="{StaticResource TransitionStackPanelStyle}">
                            <StackPanel.RenderTransform>
                                <CompositeTransform/>
                            </StackPanel.RenderTransform>

                            <ProgressRing Style="{StaticResource WaveProgressRingStyle}" Width="120" Height="50" IsActive="True" x:Name="LoadingBar">
                                <ProgressRing.RenderTransform>
                                    <CompositeTransform/>
                                </ProgressRing.RenderTransform>
                            </ProgressRing>
                            <TextBlock Text="Загрузка" Style="{StaticResource ProgressTextStyle}" x:Name="LoadingTextBlock">
                                <TextBlock.RenderTransform>
                                    <CompositeTransform/>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </StackPanel>
                        <TextBlock x:Name="NoDataTextblock" TextWrapping="Wrap" Text="Данные отсутствуют" Style="{StaticResource StateBlockStyle}" RenderTransformOrigin="0.5,0.5" Margin="0,0,20,0" VerticalAlignment="Top" HorizontalAlignment="Left" Visibility="Collapsed" Opacity="0">
                            <TextBlock.RenderTransform>
                                <CompositeTransform/>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                        <ContentPresenter x:Name="Prsenter" Content="{TemplateBinding Content}" Opacity="0" Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:AppNotificationControl">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:AppNotificationControl">
                    <Grid x:Name="RootGrid" Margin="20,10,20,0" RenderTransformOrigin="0.5,0.5" ManipulationMode="TranslateX">
                        <Grid.Resources>
                            <Storyboard x:Name="VisibleStoryboard">
                                <DoubleAnimation Storyboard.TargetName="VisualBorder" Storyboard.TargetProperty="Width" From="50" To="340" Duration="0:0:0.5" EnableDependentAnimation="True" >
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseInOut" Exponent="3"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentGrid">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="RootGrid">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Visible</Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="VisualBorder">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>

                            <Storyboard x:Name="CollapsedStoryboard">
                                <DoubleAnimation Storyboard.TargetName="VisualBorder" Storyboard.TargetProperty="Width" To="50" Duration="0:0:0.5" EnableDependentAnimation="True">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseInOut" Exponent="3"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentGrid" d:IsOptimized="True"/>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="VisualBorder">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="RootGrid">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Visible</Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.6">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Visible</Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.617">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Collapsed</Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            
                            <Storyboard x:Name="ManipulationResetStoryboard">
                                <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="RootGrid" d:IsOptimized="True">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseInOut" Exponent="4"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.4" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="RootGrid" d:IsOptimized="True"/>
                            </Storyboard>
                            <Storyboard x:Name="ManipulationCompletedStoryboard">
                                <DoubleAnimation Duration="0:0:0.3" To="350" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="RootGrid" d:IsOptimized="True">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut" Exponent="4"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="RootGrid" d:IsOptimized="True"/>
                            </Storyboard>
                        </Grid.Resources>
                        <Grid.RenderTransform>
                            <CompositeTransform/>
                        </Grid.RenderTransform>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="TypeStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" To="Default"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Default"/>
                                <VisualState x:Name="Error">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.3" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="VisualBorder" d:IsOptimized="True" To="{StaticResource ResourceKey=ErrorPopupBackground}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Warning">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.3" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="VisualBorder" d:IsOptimized="True" To="{StaticResource WarningPopupBackground}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Info">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.3" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="VisualBorder" d:IsOptimized="True" To="{StaticResource InfoPopupBackground}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="TitleState">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="ContentTextBlock">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="18">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseIn" Exponent="5"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentTextBlock">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="TitleTextBlock">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="-18"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-18"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="5"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TitleTextBlock">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ContentState">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TitleTextBlock">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="TitleTextBlock">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-18">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseIn" Exponent="5"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentTextBlock">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="ContentTextBlock">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="18"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="18"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="5"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="VisualBorder" BorderBrush="#7FFFFFFF" BorderThickness="1" Height="50" CornerRadius="25" RenderTransformOrigin="0,0.5">
                            <Border.Background>
                                <SolidColorBrush Color="{ThemeResource TopBarBackgroundColor}"/>
                            </Border.Background>
                            <Border x:Name="ImagePlaceholder" Width="50" CornerRadius="25" Height="50" HorizontalAlignment="Left" d:LayoutOverrides="Width, LeftPosition, RightPosition, TopPosition, BottomPosition">
                                <Border.Background>
                                    <SolidColorBrush Color="{StaticResource MenuButtonPressedBackgroundColor}"/>
                                </Border.Background>
                                <Ellipse Width="50" Height="50">
                                    <Ellipse.Fill>
                                        <ImageBrush Stretch="UniformToFill" ImageSource="{Binding Message.ImageUrl, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    </Ellipse.Fill>
                                </Ellipse>
                            </Border>
                        </Border>
                        <Grid x:Name="ContentGrid" Margin="60,0,15,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="TitleTextBlock" Text="{Binding Message.Title, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource BaseTextStyle}" 
                                       Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Stretch" 
                                       TextTrimming="CharacterEllipsis" MaxLines="2" TextWrapping="WrapWholeWords" 
                                       Grid.Column="1" Margin="0,0,0,2" FontWeight="SemiBold" 
                                       TextAlignment="Center"
                                       Visibility="{Binding Message.Title, Converter={StaticResource NullToInvisibleConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                       RenderTransformOrigin="0.5,0.5" Opacity="0">
                                <TextBlock.RenderTransform>
                                    <CompositeTransform/>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                            <TextBlock x:Name="ContentTextBlock" Text="{Binding Message.Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource BaseTextStyle}" 
                                       Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Stretch" 
                                       TextWrapping="WrapWholeWords" TextTrimming="CharacterEllipsis" Grid.Column="2" Margin="0,0,0,2" 
                                       RenderTransformOrigin="0.5,0.5" MaxLines="2" Opacity="0" TextAlignment="Center">
                                <TextBlock.RenderTransform>
                                    <CompositeTransform TranslateY="18"/>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:UserChatAvatar">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:UserChatAvatar">
                    <Grid>
                        <Interactivity:Interaction.Behaviors>
                            <Core:DataTriggerBehavior Binding="{Binding User.Online, Converter={StaticResource ObjectToStringConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                                <Core:GoToStateAction StateName="Online"/>
                            </Core:DataTriggerBehavior>
                            <Core:DataTriggerBehavior Binding="{Binding User.Online, Converter={StaticResource ObjectToStringConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="False">
                                <Core:GoToStateAction StateName="Offline"/>
                            </Core:DataTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OnlineStates">
                                <VisualState x:Name="Online">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.4" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OnlineEllipse" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Offline">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.4" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OnlineEllipse" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Background="{ThemeResource ImageBackgroundBrush}"
                            CornerRadius="60">
                            <Ellipse Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                <Ellipse.Fill>
                                    <ImageBrush Stretch="UniformToFill" ImageSource="{Binding User.Photo50, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Border>
                        <Ellipse x:Name="OnlineEllipse" Width="12" Height="12" HorizontalAlignment="Right" VerticalAlignment="Bottom" Fill="{ThemeResource AccentBrush}" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <x:Double x:Key="MessageStateBlockIconSize">16.0</x:Double>
    <Style TargetType="local:MessageStateControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:MessageStateControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="Common">
                                <VisualState x:Name="Default"/>
                                <VisualState x:Name="Sending">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SendingRect" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unread">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="UnreadRect" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Read">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ReadRect" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Error">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ErrorBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ErrorBlock">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.Background>
                            <ImageBrush Stretch="Fill"/>
                        </Grid.Background>
                        <Rectangle x:Name="SendingRect" Opacity="0" HorizontalAlignment="Right" Width="{StaticResource MessageStateBlockIconSize}" Height="{StaticResource MessageStateBlockIconSize}">
                            <Rectangle.Fill>
                                <ImageBrush Stretch="Uniform" ImageSource="ms-appx:/Assets/Messages/Sending.png"/>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="UnreadRect" Opacity="0" HorizontalAlignment="Right" Width="{StaticResource MessageStateBlockIconSize}" Height="{StaticResource MessageStateBlockIconSize}">
                            <Rectangle.Fill>
                                <ImageBrush Stretch="Uniform" ImageSource="ms-appx:///Assets/Messages/Unread.png"/>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="ReadRect" Opacity="0" HorizontalAlignment="Right" Width="{StaticResource MessageStateBlockIconSize}" Height="{StaticResource MessageStateBlockIconSize}">
                            <Rectangle.Fill>
                                <ImageBrush Stretch="Uniform" ImageSource="ms-appx:///Assets/Messages/Read.png"/>
                            </Rectangle.Fill>
                        </Rectangle>
                        <HyperlinkButton x:Name="ErrorBlock" 
                                         Content="Коснитесь для повтора" 
                                         Style="{StaticResource HyperlinkButtonStyle}" 
                                         Command="{Binding RetryCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                         CommandParameter="{Binding RetryCommandParameter, RelativeSource={RelativeSource TemplatedParent}}"
                                         Foreground="White" FontSize="15"
                                         Height="{StaticResource MessageStateBlockIconSize}"
                                         HorizontalAlignment="Right" Opacity="0" Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:ConversationAvatar">
        <Setter Property="Width" Value="66"/>
        <Setter Property="Height" Value="66"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ConversationAvatar">
                    <Border Background="{ThemeResource ImageBackgroundBrush}" CornerRadius="33">
                        <Grid x:Name="ContentGrid">
                            <Path x:Name="LeftTopPie" Fill="{x:Null}" Height="33" Width="33"
                                  HorizontalAlignment="Left" VerticalAlignment="Top" Stretch="Fill"
                                  Data="M 66.90 29.80 C 93.54 10.70 126.18 -0.00 159.00 0.14 L 159.00 160.00 L 0.00 160.00 L 0.00 151.19 C 1.57 136.51 3.56 121.69 8.83 107.80 C 19.42 76.58 40.13 48.99 66.90 29.80 Z"/>
                            <Path x:Name="RightTopPie" Fill="{x:Null}" Height="33" Width="33"
                                  HorizontalAlignment="Right" VerticalAlignment="Top" Stretch="Fill"
                                  Data="M 0.00 0.32 C 27.53 -0.19 54.95 7.60 78.80 21.19 C 101.17 33.89 120.21 52.28 134.04 73.94 C 149.52 98.20 158.30 126.66 159.00 155.46 L 159.00 160.00 L 0.00 160.00 L 0.00 0.32 Z"/>
                            <Path x:Name="LeftBottomPie" Fill="{x:Null}" Height="33" Width="33"
                                  HorizontalAlignment="Left" VerticalAlignment="Bottom" Stretch="Fill"
                                  Data="M 0.00 0.00 L 159.00 0.00 L 159.00 160.00 L 150.55 160.00 C 120.28 158.21 90.52 147.78 66.07 129.81 C 39.76 110.91 19.51 83.70 9.01 53.06 C 3.63 39.00 1.50 24.01 0.00 9.13 L 0.00 0.00 Z"/>
                            <Path x:Name="RightBottomPie" Fill="{x:Null}" Height="33" Width="33"
                                  HorizontalAlignment="Right" VerticalAlignment="Bottom" Stretch="Fill"
                                  Data="M 0.00 0.75 C 53.00 0.75 106.00 0.75 159.00 0.75 L 159.00 9.19 C 156.82 44.95 142.68 79.99 118.66 106.65 C 90.75 138.37 49.73 158.03 7.52 160.00 L 0.00 160.00 L 0.00 0.75 Z"/>

                            <Path x:Name="LeftSemicircle" Fill="{x:Null}" Height="66" Width="33"
                                  HorizontalAlignment="Left" VerticalAlignment="Center" Stretch="Fill"
                                  Data="M 31.18 65.18 C 60.24 24.93 109.24 -0.37 159.00 0.26 L 159.00 319.00 L 150.77 319.00 C 105.00 316.64 60.83 293.36 33.17 256.81 C 12.65 230.11 0.65 196.80 0.14 163.06 C -0.77 128.19 10.38 93.15 31.18 65.18 Z"/>
                            <Path x:Name="RightSemicircle" Fill="{x:Null}" Height="66" Width="33"
                                  HorizontalAlignment="Right" VerticalAlignment="Center" Stretch="Fill"
                                  Data="M 0.00 0.32 C 45.21 -0.39 89.88 20.48 119.44 54.50 C 143.66 81.87 157.82 117.86 159.00 154.38 L 159.00 168.18 C 157.10 198.49 146.86 228.34 128.91 252.90 C 115.88 271.07 98.95 286.42 79.61 297.63 C 57.75 310.39 32.80 317.70 7.53 319.00 L 0.00 319.00 L 0.00 0.32 Z"/>
                            <Path x:Name="TopSemicircle" Fill="{x:Null}" Height="33" Width="66"
                                  HorizontalAlignment="Center" VerticalAlignment="Top" Stretch="Fill"
                                  Data="M 131.12 2.63 C 167.89 -4.05 206.96 2.81 239.08 21.95 C 256.49 32.11 271.96 45.64 284.32 61.57 C 305.11 88.20 317.16 121.54 318.00 155.34 L 318.00 160.00 L 0.00 160.00 L 0.00 150.50 C 1.69 135.74 3.76 120.85 9.16 106.91 C 12.90 96.11 17.78 85.67 23.90 76.01 C 46.99 37.74 87.14 10.46 131.12 2.63 Z"/>
                            <Path x:Name="BottomSemicircle" Fill="{x:Null}" Height="33" Width="66"
                                  HorizontalAlignment="Center" VerticalAlignment="Bottom" Stretch="Fill"
                                  Data="M 0.00 0.00 L 155.52 0.00 C 157.66 0.41 159.82 0.67 162.00 0.77 C 214.00 0.72 266.00 0.76 318.00 0.75 L 318.00 9.14 C 316.07 40.67 304.98 71.67 285.77 96.81 C 257.98 134.20 212.97 157.94 166.44 160.00 L 150.59 160.00 C 123.43 158.45 96.74 149.81 73.83 135.15 C 44.02 116.20 20.79 87.05 9.23 53.64 C 3.70 39.36 1.48 24.10 0.00 8.94 L 0.00 0.00 Z"/>

                            <Ellipse x:Name="Ellipse" Fill="{x:Null}" Height="66" Width="66"
                                     HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SmallConversationAvatarStyle" TargetType="local:ConversationAvatar">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ConversationAvatar">
                    <Border Background="{ThemeResource ImageBackgroundBrush}" CornerRadius="20">
                        <Grid x:Name="ContentGrid">
                            <Path x:Name="LeftTopPie" Fill="{x:Null}" Height="20" Width="20"
                                  HorizontalAlignment="Left" VerticalAlignment="Top" Stretch="Fill"
                                  Data="M 66.90 29.80 C 93.54 10.70 126.18 -0.00 159.00 0.14 L 159.00 160.00 L 0.00 160.00 L 0.00 151.19 C 1.57 136.51 3.56 121.69 8.83 107.80 C 19.42 76.58 40.13 48.99 66.90 29.80 Z"/>
                            <Path x:Name="RightTopPie" Fill="{x:Null}" Height="20" Width="20"
                                  HorizontalAlignment="Right" VerticalAlignment="Top" Stretch="Fill"
                                  Data="M 0.00 0.32 C 27.53 -0.19 54.95 7.60 78.80 21.19 C 101.17 33.89 120.21 52.28 134.04 73.94 C 149.52 98.20 158.30 126.66 159.00 155.46 L 159.00 160.00 L 0.00 160.00 L 0.00 0.32 Z"/>
                            <Path x:Name="LeftBottomPie" Fill="{x:Null}" Height="20" Width="20"
                                  HorizontalAlignment="Left" VerticalAlignment="Bottom" Stretch="Fill"
                                  Data="M 0.00 0.00 L 159.00 0.00 L 159.00 160.00 L 150.55 160.00 C 120.28 158.21 90.52 147.78 66.07 129.81 C 39.76 110.91 19.51 83.70 9.01 53.06 C 3.63 39.00 1.50 24.01 0.00 9.13 L 0.00 0.00 Z"/>
                            <Path x:Name="RightBottomPie" Fill="{x:Null}" Height="20" Width="20"
                                  HorizontalAlignment="Right" VerticalAlignment="Bottom" Stretch="Fill"
                                  Data="M 0.00 0.75 C 53.00 0.75 106.00 0.75 159.00 0.75 L 159.00 9.19 C 156.82 44.95 142.68 79.99 118.66 106.65 C 90.75 138.37 49.73 158.03 7.52 160.00 L 0.00 160.00 L 0.00 0.75 Z"/>

                            <Path x:Name="LeftSemicircle" Fill="{x:Null}" Height="40" Width="20"
                                  HorizontalAlignment="Left" VerticalAlignment="Center" Stretch="Fill"
                                  Data="M 31.18 65.18 C 60.24 24.93 109.24 -0.37 159.00 0.26 L 159.00 319.00 L 150.77 319.00 C 105.00 316.64 60.83 293.36 33.17 256.81 C 12.65 230.11 0.65 196.80 0.14 163.06 C -0.77 128.19 10.38 93.15 31.18 65.18 Z"/>
                            <Path x:Name="RightSemicircle" Fill="{x:Null}" Height="40" Width="20"
                                  HorizontalAlignment="Right" VerticalAlignment="Center" Stretch="Fill"
                                  Data="M 0.00 0.32 C 45.21 -0.39 89.88 20.48 119.44 54.50 C 143.66 81.87 157.82 117.86 159.00 154.38 L 159.00 168.18 C 157.10 198.49 146.86 228.34 128.91 252.90 C 115.88 271.07 98.95 286.42 79.61 297.63 C 57.75 310.39 32.80 317.70 7.53 319.00 L 0.00 319.00 L 0.00 0.32 Z"/>
                            <Path x:Name="TopSemicircle" Fill="{x:Null}" Height="20" Width="40"
                                  HorizontalAlignment="Center" VerticalAlignment="Top" Stretch="Fill"
                                  Data="M 131.12 2.63 C 167.89 -4.05 206.96 2.81 239.08 21.95 C 256.49 32.11 271.96 45.64 284.32 61.57 C 305.11 88.20 317.16 121.54 318.00 155.34 L 318.00 160.00 L 0.00 160.00 L 0.00 150.50 C 1.69 135.74 3.76 120.85 9.16 106.91 C 12.90 96.11 17.78 85.67 23.90 76.01 C 46.99 37.74 87.14 10.46 131.12 2.63 Z"/>
                            <Path x:Name="BottomSemicircle" Fill="{x:Null}" Height="20" Width="40"
                                  HorizontalAlignment="Center" VerticalAlignment="Bottom" Stretch="Fill"
                                  Data="M 0.00 0.00 L 155.52 0.00 C 157.66 0.41 159.82 0.67 162.00 0.77 C 214.00 0.72 266.00 0.76 318.00 0.75 L 318.00 9.14 C 316.07 40.67 304.98 71.67 285.77 96.81 C 257.98 134.20 212.97 157.94 166.44 160.00 L 150.59 160.00 C 123.43 158.45 96.74 149.81 73.83 135.15 C 44.02 116.20 20.79 87.05 9.23 53.64 C 3.70 39.36 1.48 24.10 0.00 8.94 L 0.00 0.00 Z"/>

                            <Ellipse x:Name="Ellipse" Fill="{x:Null}" Height="40" Width="40"
                                     HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
